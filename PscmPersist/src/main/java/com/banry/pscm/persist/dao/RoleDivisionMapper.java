package com.banry.pscm.persist.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import com.banry.pscm.persist.mapper.RoleDivisionSqlProvider;
import com.banry.pscm.service.schedule.RoleDivision;

public interface RoleDivisionMapper {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @Delete({
        "delete from role_division",
        "where role_div_code = #{roleDivCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String roleDivCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @Insert({
        "insert into role_division (role_div_code, role_code, ",
        "div_code, tenant_code)",
        "values (#{roleDivCode,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, ",
        "#{divCode,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR})"
    })
    int insert(RoleDivision record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @InsertProvider(type=RoleDivisionSqlProvider.class, method="insertSelective")
    int insertSelective(RoleDivision record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @Select({
        "select",
        "role_div_code, role_code, div_code, tenant_code",
        "from role_division",
        "where role_div_code = #{roleDivCode,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="role_div_code", property="roleDivCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_code", property="roleCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="div_code", property="divCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_code", property="tenantCode", jdbcType=JdbcType.VARCHAR)
    })
    RoleDivision selectByPrimaryKey(String roleDivCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @UpdateProvider(type=RoleDivisionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(RoleDivision record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_division
     *
     * @mbg.generated Fri Jul 13 09:45:52 CST 2018
     */
    @Update({
        "update role_division",
        "set role_code = #{roleCode,jdbcType=VARCHAR},",
          "div_code = #{divCode,jdbcType=VARCHAR},",
          "tenant_code = #{tenantCode,jdbcType=VARCHAR}",
        "where role_div_code = #{roleDivCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(RoleDivision record);
    
    /**
	 * 根据角色删除
	 */
	@Delete({ "delete from role_division", "where role_code = #{rolecode,jdbcType=VARCHAR} and tenant_code = #{tenantCode,jdbcType=VARCHAR}" })
	int deleteByRoleCode(@Param("rolecode") String rolecode, @Param("tenantCode") String tenantCode);
    
	/**
     * 查询所有部门（或者条件查询）
     * @param sqlWhere  
     * @return 
     */
    @SelectProvider(type=RoleDivisionSqlProvider.class,method="selectBySqlWhere")
	List<RoleDivision> selectBySqlWhere(String sqlWhere);
    
    
    
}