package com.banry.pscm.persist.mapper;

import com.banry.pscm.service.schedule.*;
import org.apache.ibatis.jdbc.SQL;

public class EngDivisionSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table eng_division
	 * @mbg.generated  Thu Jun 14 14:52:28 CST 2018
	 */
	public String insertSelective(EngDivision record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("eng_division");
		if (record.getDivisionSnCode() != null) {
			sql.VALUES("division_sn_code", "#{divisionSnCode,jdbcType=VARCHAR}");
		}
		if (record.getEngCode() != null) {
			sql.VALUES("eng_code", "#{engCode,jdbcType=VARCHAR}");
		}
		if (record.getDivItemCode() != null) {
			sql.VALUES("div_item_code", "#{divItemCode,jdbcType=VARCHAR}");
		}
		if (record.getDivName() != null) {
			sql.VALUES("div_name", "#{divName,jdbcType=VARCHAR}");
		}
		if (record.getSkill() != null) {
			sql.VALUES("skill", "#{skill,jdbcType=VARCHAR}");
		}
		if (record.getDivLevel() != null) {
			sql.VALUES("div_level", "#{divLevel,jdbcType=INTEGER}");
		}
		if (record.getParentDivSnCode() != null) {
			sql.VALUES("parent_div_sn_code", "#{parentDivSnCode,jdbcType=VARCHAR}");
		}
		if (record.getRealStartDate() != null) {
			sql.VALUES("real_start_date", "#{realStartDate,jdbcType=DATE}");
		}
		if (record.getRealEndDate() != null) {
			sql.VALUES("real_end_date", "#{realEndDate,jdbcType=DATE}");
		}
		if (record.getPath() != null) {
			sql.VALUES("path", "#{path,jdbcType=VARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table eng_division
	 * @mbg.generated  Thu Jun 14 14:52:28 CST 2018
	 */
	public String updateByPrimaryKeySelective(EngDivision record) {
		SQL sql = new SQL();
		sql.UPDATE("eng_division");
		if (record.getEngCode() != null) {
			sql.SET("eng_code = #{engCode,jdbcType=VARCHAR}");
		}
		if (record.getDivItemCode() != null) {
			sql.SET("div_item_code = #{divItemCode,jdbcType=VARCHAR}");
		}
		if (record.getDivName() != null) {
			sql.SET("div_name = #{divName,jdbcType=VARCHAR}");
		}
		if (record.getSkill() != null) {
			sql.SET("skill = #{skill,jdbcType=VARCHAR}");
		}
		if (record.getDivLevel() != null) {
			sql.SET("div_level = #{divLevel,jdbcType=INTEGER}");
		}
		if (record.getParentDivSnCode() != null) {
			sql.SET("parent_div_sn_code = #{parentDivSnCode,jdbcType=VARCHAR}");
		}
		if (record.getRealStartDate() != null) {
			sql.SET("real_start_date = #{realStartDate,jdbcType=DATE}");
		}
		if (record.getRealEndDate() != null) {
			sql.SET("real_end_date = #{realEndDate,jdbcType=DATE}");
		}
		if (record.getPath() != null) {
			sql.SET("path = #{path,jdbcType=VARCHAR}");
		}
		sql.WHERE("division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}");
		return sql.toString();
	}
	
	public String selectBySqlWhere(String select, String sqlWhere) {
		SQL sql = new SQL();
		sql.SELECT(select);
		sql.FROM("eng_division a");
		sql.WHERE(sqlWhere);
		return sql.toString();
	}
	
	public String selectBySql(String sql) {
		return sql;
	}
	
	public String selectTechnologyLeaderFillData(String userid, String divcode, String pDivSnCode) {
		StringBuffer sql = new StringBuffer();
		sql.append("select a.division_sn_code DivisionSnCode, a.div_name DivName, a.div_item_code DivItemCode, a.div_level DivLevel, b.start_date startDate,  b.end_date endDate,");
		sql.append(" datediff(b.end_date, b.start_date) + 1 planToady, a.Real_Start_Date actualStartDate, a.Real_End_Date actualEndDate,"); 
		sql.append(" TO_DAYS(ifnull(a.Real_End_Date, now())) - TO_DAYS(ifnull(a.Real_Start_Date, now())) actualConstDays,"); 
		sql.append(" ifnull(c.FinishNumber,0) completedQuantity, ifnull(e.raw_con_map_quan,0) + ifnull(e.cons_map_sum_vary_quan,0)  consSchemeQuantity,");
		sql.append(" ROUND(ifnull(e.raw_con_map_quan,0) + ifnull(e.cons_map_sum_vary_quan,0) - ifnull(c.FinishNumber,0)) remainingQuantity, ifnull(e.raw_con_map_quan,0) + ifnull(e.cons_map_sum_vary_quan,0)  designQuantity"); 
		sql.append(" from eng_division a join eng_division_plan b on a.division_sn_code = b.division_sn_code"); 
//		sql.append(" left join tech_disclosure d on a.division_sn_code = d. and d.Disclosurer = '" + userid + "'"); 
		sql.append(" left join sub_div_work_bill e on a.division_sn_code = e.division_sn_code"); 
		sql.append(" left join ("); 
		sql.append(" select division_sn_code, sum(finish_number) FinishNumber"); 
		sql.append(" from eng_div_finish_rate "); 
		sql.append(" group by division_sn_code"); 
		sql.append(" ) c on a.division_sn_code = c.division_sn_code"); 
		sql.append(" where ifnull(e.raw_con_map_quan,0) + ifnull(e.cons_map_sum_vary_quan,0) > getSumFinishByDivSnCode(a.division_sn_code) ");//#and (d.DisDivSnCode is not null or b.startDate <= now())");
		//sql.append(" where a.DivLevel=10");
//		sql.append(" where not exists (");
//		sql.append(" select 1");
//		sql.append(" from eng_division d");
//		sql.append(" where a.DivisionSnCode = d.Divitemcode)");
		if (divcode != null && !"".equals(divcode)) {
			sql.append(" and a.division_sn_code = '" + divcode + "'");
		}
		if (pDivSnCode != null && !"".equals(pDivSnCode)) {
			sql.append(" and getParentDivSnCode(a.division_sn_code) = '" + pDivSnCode + "'");
		}
		return sql.toString();
	}
	
	/**
	 * 根据角色id查询该角色下的划分
	 * @param roleCode
	 * @return
	 */
	public String selectEngDivisionByRoleCode(String roleCode) {
		return "select * from eng_division a where exists (select 1 from role_division b where a.division_sn_code= b.div_code and b.role_code='" + roleCode + "')";
	}
}