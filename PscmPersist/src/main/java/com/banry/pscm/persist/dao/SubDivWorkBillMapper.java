package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.SubDivWorkBillSqlProvider;
import com.banry.pscm.persist.mapper.TenderPlanSQLBuilder;
import com.banry.pscm.service.contract.DownContract;
import com.banry.pscm.service.schedule.SubDivWorkBill;
import com.banry.pscm.service.schedule.SubDivWorkBillChange;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
import java.util.Map;

public interface SubDivWorkBillMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @Delete({
        "delete from sub_div_work_bill",
        "where division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String divisionSnCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @Insert({
        "insert into sub_div_work_bill (division_sn_code, name, ",
        "unit, bid_map_quan, ",
        "raw_con_map_quan, cons_map_sum_vary_quan, ",
        "calculate_unit_price, contract_unit_price, ",
        "comp_unit_price, temporary_measure_price, ",
        "quota_manual_fee, quota_code, ",
        "tender_plan_code, tender_result_code, ",
        "contract_code, charact_des, status)",
        "values (#{divisionSnCode.divisionSnCode}, #{name,jdbcType=VARCHAR}, ",
        "#{unit,jdbcType=VARCHAR}, #{bidMapQuan,jdbcType=DOUBLE}, ",
        "#{rawConMapQuan,jdbcType=DOUBLE}, #{consMapSumVaryQuan,jdbcType=DOUBLE}, ",
        "#{calculateUnitPrice,jdbcType=DOUBLE}, #{contractUnitPrice,jdbcType=DOUBLE}, ",
        "#{compUnitPrice,jdbcType=DOUBLE}, #{temporaryMeasurePrice,jdbcType=DOUBLE}, ",
        "#{quotaManualFee,jdbcType=DOUBLE}, #{quotaCode,jdbcType=VARCHAR}, ",
        "#{tenderPlanCode,jdbcType=VARCHAR}, #{tenderResultCode,jdbcType=VARCHAR}, ",
        "#{contractCode,jdbcType=VARCHAR}, #{charactDes,jdbcType=LONGVARCHAR}), #{status,jdbcType=INTEGER})"
    })
    int insert(SubDivWorkBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @InsertProvider(type=SubDivWorkBillSqlProvider.class, method="insertSelective")
    int insertSelective(SubDivWorkBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @Select({
        "select * ",
        "from sub_div_work_bill ",
        "where division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseSubDivWorkBill")
    SubDivWorkBill selectByPrimaryKey(String divisionSnCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @UpdateProvider(type=SubDivWorkBillSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SubDivWorkBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_bill
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    @Update({
        "update sub_div_work_bill",
        "set name = #{name,jdbcType=VARCHAR},",
          "unit = #{unit,jdbcType=VARCHAR},",
          "bid_map_quan = #{bidMapQuan,jdbcType=DOUBLE},",
          "raw_con_map_quan = #{rawConMapQuan,jdbcType=DOUBLE},",
          "cons_map_sum_vary_quan = #{consMapSumVaryQuan,jdbcType=DOUBLE},",
          "calculate_unit_price = #{calculateUnitPrice,jdbcType=DOUBLE},",
          "contract_unit_price = #{contractUnitPrice,jdbcType=DOUBLE},",
          "comp_unit_price = #{compUnitPrice,jdbcType=DOUBLE},",
          "temporary_measure_price = #{temporaryMeasurePrice,jdbcType=DOUBLE},",
          "quota_manual_fee = #{quotaManualFee,jdbcType=DOUBLE},",
          "quota_code = #{quotaCode,jdbcType=VARCHAR},",
          "tender_plan_code = #{tenderPlanCode,jdbcType=VARCHAR},",
          "tender_result_code = #{tenderResultCode,jdbcType=VARCHAR},",
          "contract_code = #{contractCode,jdbcType=VARCHAR},",
          "charact_des = #{charactDes,jdbcType=LONGVARCHAR},",
          "status = #{status,jdbcType=INTEGER}",
        "where division_sn_code = #{divisionSnCode.divisionSnCode}"
    })
    int updateByPrimaryKey(SubDivWorkBill record);

    /**
	 * @param divisionsncode
	 * @return
	 */
	@Select("select status from sub_div_work_bill where division_sn_code=#{divisionsncode}")
	int findSubDivWorkBillStatusByDivisionSnCode(String divisionsncode);

	/**
	 *
	 * @return
	 */
	@Select({"select ",
		"division_sn_code,name,charact_des,unit,bid_map_quan,raw_con_map_quan,cons_map_sum_vary_quan,calculate_unit_price," +
		"contract_unit_price,comp_unit_price,temporary_measure_price,quota_manual_fee,quota_code,status,tender_plan_code,tender_result_code,contract_code ",
			",supplier_credit_code",
    	"from sub_div_work_bill "})
    @Results(id="BaseSubDivWorkBill",value={
		@Result(column="division_sn_code", property="divisionSnCode", id=true,
        		one=@One(
        				select="com.banry.pscm.persist.dao.EngDivisionMapper.selectByPrimaryKey",
        				fetchType=FetchType.EAGER
        				)),
		@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
		@Result(column = "charact_des", property = "charactDes", jdbcType = JdbcType.VARCHAR),
		@Result(column = "unit", property = "unit", jdbcType = JdbcType.VARCHAR),
		@Result(column = "bid_map_quan", property = "bidMapQuan", jdbcType = JdbcType.DOUBLE),
		@Result(column = "raw_con_map_quan", property = "rawConMapQuan", jdbcType = JdbcType.DOUBLE),
		@Result(column = "cons_map_sum_vary_quan", property = "consMapSumVaryQuan", jdbcType = JdbcType.DOUBLE),
		@Result(column = "calculate_unit_price", property = "calculateUnitPrice", jdbcType = JdbcType.DOUBLE),
		@Result(column = "contract_unit_price", property = "contractUnitPrice", jdbcType = JdbcType.DOUBLE),
		@Result(column = "comp_unit_price", property = "compUnitPrice", jdbcType = JdbcType.DOUBLE),
		@Result(column = "temporary_measure_price", property = "temporaryMeasurePrice", jdbcType = JdbcType.DOUBLE),
		@Result(column = "quota_manual_fee", property = "quotaManualFee", jdbcType = JdbcType.DOUBLE),
		@Result(column = "quota_code", property = "quotaCode", jdbcType = JdbcType.VARCHAR),
		@Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
		@Result(column = "tender_plan_code", property = "tenderPlanCode", jdbcType = JdbcType.VARCHAR),
		@Result(column = "tender_result_code", property = "tenderResultCode", jdbcType = JdbcType.VARCHAR),
		@Result(column = "contract_code", property = "contractCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "supplier_credit_code", property = "supplier", one = @One(
					select = "com.banry.pscm.persist.dao.SupplierMapper.selectByPrimaryKey",
					fetchType = FetchType.EAGER
			))
    })
	List<SubDivWorkBill> findAllSubDivWorkBill();

	/**
	 * @param name 项目名称
	 * @return
	 */
	@Select({"select * ",
    	"from sub_div_work_bill ",
    	"where name like concat('%',#{name,jdbcType=VARCHAR},'%') "})
    @ResultMap("BaseSubDivWorkBill")
	List<SubDivWorkBill> findSubDivWorkBillsByName(String name);

	/**
	 * 查询�??个分项工程下的所有工序的清单信息�??
	 * @param parentCode
	 * @return
	 */
	@Select({"select * ",
    	"from sub_div_work_bill ",
    	"where division_sn_code in(select division_sn_code from eng_division where parent_div_sn_code = #{parentCode} or division_sn_code=  #{parentCode}) "})
    @ResultMap("BaseSubDivWorkBill")
	List<SubDivWorkBill> findSubDivWorkBillsByParentDivisionSnCode(String parentCode);


	/**
	 * 工程划分清单 提交 操作
	 * @param divisionsncode
	 */
	@Update({"update sub_div_work_bill ","set status=2 ","where division_sn_code = #{divisionsncode,jdbcType=VARCHAR} and status=1 "})
	int updateSubDivWorkBillStatusSubmit(String divisionsncode);

	@SelectProvider(type = TenderPlanSQLBuilder.class,method = "findSubBySqlWhere")
	@ResultMap("BaseSubDivWorkBill")
	List<SubDivWorkBill> findSubBySqlWhere(String sqlWhere);

	@Select({"select *"
			+" from sub_div_work_bill s"
			+" where tender_plan_code=#{tenderPlanCode,jdbcType=VARCHAR}"})
	@ResultMap("BaseSubDivWorkBill")
	List<SubDivWorkBill> findWorkBillByTenderPlanCode(String tenderPlanCode);

	@Update({
			"UPDATE sub_div_work_bill t",
			"SET contract_code = #{downContractCode,jdbcType=VARCHAR}",
			"WHERE",
			"t.tender_result_code = #{tenderResultCode,jdbcType=VARCHAR}",
			"and t.supplier_credit_code = #{contractPartSecond.supplierCreditCode, jdbcType=VARCHAR}"
	})
	int addSubDivWorkBillToContract(DownContract downContract);

	@Select({
			"SELECT",
			"sdwb.`name`,",
			"sdwb.charact_des,",
			"sdwtrcb.change_type,",
			"sdwb.unit,",
			"sdwb.cons_map_sum_vary_quan,",
			"sdwtrcb.eng_num_change,",
			"sdwtrcb.unit_price_change,",
			"sdwb.contract_unit_price,",
			"sdwb.division_sn_code,",
			"sdwb.bid_map_quan,",
			"sdwb.raw_con_map_quan,",
			"sdwb.calculate_unit_price,",
			"sdwb.comp_unit_price,",
			"sdwb.temporary_measure_price,",
			"sdwb.quota_manual_fee,",
			"sdwb.quota_code,",
			"sdwb.tender_plan_code,",
			"sdwb.tender_result_code,",
			"sdwb.contract_code,",
			"sdwb.`status`",
			"FROM",
			"sub_div_work_bill AS sdwb",
			"LEFT JOIN down_contract AS dc ON sdwb.contract_code = dc.down_contract_code",
			"LEFT JOIN sub_div_work_tender_result_change_bill AS sdwtrcb ON sdwb.division_sn_code = sdwtrcb.division_sn_code",
			"WHERE",
			"dc.down_contract_code = #{contractCode, jdbcType=VARCHAR}"
	})
	@Results({
			@Result(column="division_sn_code", property="divisionSnCode", id=true,
					one=@One(
							select="com.banry.pscm.persist.dao.EngDivisionMapper.selectByPrimaryKey",
							fetchType=FetchType.EAGER
					)),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "charact_des", property = "charactDes", jdbcType = JdbcType.VARCHAR),
			@Result(column = "unit", property = "unit", jdbcType = JdbcType.VARCHAR),
			@Result(column = "bid_map_quan", property = "bidMapQuan", jdbcType = JdbcType.DOUBLE),
			@Result(column = "raw_con_map_quan", property = "rawConMapQuan", jdbcType = JdbcType.DOUBLE),
			@Result(column = "cons_map_sum_vary_quan", property = "consMapSumVaryQuan", jdbcType = JdbcType.DOUBLE),
			@Result(column = "calculate_unit_price", property = "calculateUnitPrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "contract_unit_price", property = "contractUnitPrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "comp_unit_price", property = "compUnitPrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "temporary_measure_price", property = "temporaryMeasurePrice", jdbcType = JdbcType.DOUBLE),
			@Result(column = "quota_manual_fee", property = "quotaManualFee", jdbcType = JdbcType.DOUBLE),
			@Result(column = "quota_code", property = "quotaCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
			@Result(column = "tender_plan_code", property = "tenderPlanCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "tender_result_code", property = "tenderResultCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "contract_code", property = "contractCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "change_type", property = "changeType", jdbcType = JdbcType.INTEGER),
			@Result(column = "eng_num_change", property = "engNumChange", jdbcType = JdbcType.DOUBLE),
			@Result(column = "unit_price_change", property = "unitPriceChange", jdbcType = JdbcType.VARCHAR)
	})
    List<SubDivWorkBillChange> findWorkBillChangeByContractCode(@Param("contractCode") String contractCode);

	@SelectProvider(type = SubDivWorkBillSqlProvider.class, method = "findWorkBillsByDivisionSnCode")
	List<Map<String, Object>> findWorkBillsByDivisionSnCode(String divisionSnCode);

	@Update({
			"UPDATE sub_div_work_bill",
			"SET",
			"contract_code = NULL",
			"WHERE",
			"contract_code = #{contractCode, jdbcType=VARCHAR}"
	})
	int clearContractCode(String contractCode);
}