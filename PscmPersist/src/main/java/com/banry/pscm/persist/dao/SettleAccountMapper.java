package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.SettleAccountSqlProvider;
import com.banry.pscm.service.contract.SettleAccount;
import com.banry.pscm.service.contract.SettleAccountVo;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface SettleAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @Delete({
            "delete from settle_account",
            "where settle_code = #{settleCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String settleCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @Insert({
            "insert into settle_account (settle_code, down_contract_code, ",
            "settle_name, settle_date, ",
            "settle_type, settle_unit, ",
            "cur_settle_amount, settle_number, ",
            "sum_settle_amount, eng_cal_status, ",
            "eng_sum_status, contract_in_settle_sum_status, ",
            "eng_check_value_sum_status, status, ",
            "cur_actual_pay_amount, cur_payable_amount, ",
            "sum_surplus_amount, sum_actual_pay_amount, ",
            "sum_payable_amount, settle_contract, ",
            "settle_attach)",
            "values (#{settleCode,jdbcType=VARCHAR}, #{downContractCode,jdbcType=VARCHAR}, ",
            "#{settleName,jdbcType=VARCHAR}, #{settleDate,jdbcType=DATE}, ",
            "#{settleType,jdbcType=INTEGER}, #{settleUnit,jdbcType=VARCHAR}, ",
            "#{curSettleAmount,jdbcType=DOUBLE}, #{settleNumber,jdbcType=INTEGER}, ",
            "#{sumSettleAmount,jdbcType=DOUBLE}, #{engCalStatus,jdbcType=INTEGER}, ",
            "#{engSumStatus,jdbcType=INTEGER}, #{contractInSettleSumStatus,jdbcType=INTEGER}, ",
            "#{engCheckValueSumStatus,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
            "#{curActualPayAmount,jdbcType=DOUBLE}, #{curPayableAmount,jdbcType=DOUBLE}, ",
            "#{sumSurplusAmount,jdbcType=DOUBLE}, #{sumActualPayAmount,jdbcType=DOUBLE}, ",
            "#{sumPayableAmount,jdbcType=DOUBLE}, #{settleContract,jdbcType=VARCHAR}, ",
            "#{settleAttach,jdbcType=VARCHAR})"
    })
    int insert(SettleAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @InsertProvider(type = SettleAccountSqlProvider.class, method = "insertSelective")
    int insertSelective(SettleAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "settle_code, down_contract_code, settle_name, settle_date, settle_type, settle_unit, ",
            "cur_settle_amount, settle_number, sum_settle_amount, eng_cal_status, eng_sum_status, ",
            "contract_in_settle_sum_status, eng_check_value_sum_status, status, cur_actual_pay_amount, ",
            "cur_payable_amount, sum_surplus_amount, sum_actual_pay_amount, sum_payable_amount, ",
            "settle_contract, settle_attach",
            "from settle_account",
            "where settle_code = #{settleCode,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "settle_code", property = "settleCode", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "down_contract_code", property = "downContractCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_name", property = "settleName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_date", property = "settleDate", jdbcType = JdbcType.DATE),
            @Result(column = "settle_type", property = "settleType", jdbcType = JdbcType.INTEGER),
            @Result(column = "settle_unit", property = "settleUnit", jdbcType = JdbcType.VARCHAR),
            @Result(column = "cur_settle_amount", property = "curSettleAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "settle_number", property = "settleNumber", jdbcType = JdbcType.INTEGER),
            @Result(column = "sum_settle_amount", property = "sumSettleAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "eng_cal_status", property = "engCalStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "eng_sum_status", property = "engSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "contract_in_settle_sum_status", property = "contractInSettleSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "eng_check_value_sum_status", property = "engCheckValueSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
            @Result(column = "cur_actual_pay_amount", property = "curActualPayAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "cur_payable_amount", property = "curPayableAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_surplus_amount", property = "sumSurplusAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_actual_pay_amount", property = "sumActualPayAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_payable_amount", property = "sumPayableAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "settle_contract", property = "settleContract", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_attach", property = "settleAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "down_contract_code", property = "contract",
                    one = @One(select = "com.banry.pscm.persist.dao.DownContractMapper.selectByPrimaryKey",
                            fetchType = FetchType.EAGER))
    })
    SettleAccountVo selectByPrimaryKey(String settleCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @UpdateProvider(type = SettleAccountSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SettleAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table settle_account
     *
     * @mbggenerated
     */
    @Update({
            "update settle_account",
            "set down_contract_code = #{downContractCode,jdbcType=VARCHAR},",
            "settle_name = #{settleName,jdbcType=VARCHAR},",
            "settle_date = #{settleDate,jdbcType=DATE},",
            "settle_type = #{settleType,jdbcType=INTEGER},",
            "settle_unit = #{settleUnit,jdbcType=VARCHAR},",
            "cur_settle_amount = #{curSettleAmount,jdbcType=DOUBLE},",
            "settle_number = #{settleNumber,jdbcType=INTEGER},",
            "sum_settle_amount = #{sumSettleAmount,jdbcType=DOUBLE},",
            "eng_cal_status = #{engCalStatus,jdbcType=INTEGER},",
            "eng_sum_status = #{engSumStatus,jdbcType=INTEGER},",
            "contract_in_settle_sum_status = #{contractInSettleSumStatus,jdbcType=INTEGER},",
            "eng_check_value_sum_status = #{engCheckValueSumStatus,jdbcType=INTEGER},",
            "status = #{status,jdbcType=INTEGER},",
            "cur_actual_pay_amount = #{curActualPayAmount,jdbcType=DOUBLE},",
            "cur_payable_amount = #{curPayableAmount,jdbcType=DOUBLE},",
            "sum_surplus_amount = #{sumSurplusAmount,jdbcType=DOUBLE},",
            "sum_actual_pay_amount = #{sumActualPayAmount,jdbcType=DOUBLE},",
            "sum_payable_amount = #{sumPayableAmount,jdbcType=DOUBLE},",
            "settle_contract = #{settleContract,jdbcType=VARCHAR},",
            "settle_attach = #{settleAttach,jdbcType=VARCHAR}",
            "where settle_code = #{settleCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(SettleAccount record);

    @Results({
            @Result(column = "settle_code", property = "settleCode", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "down_contract_code", property = "downContractCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_name", property = "settleName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_date", property = "settleDate", jdbcType = JdbcType.DATE),
            @Result(column = "settle_type", property = "settleType", jdbcType = JdbcType.INTEGER),
            @Result(column = "settle_unit", property = "settleUnit", jdbcType = JdbcType.VARCHAR),
            @Result(column = "cur_settle_amount", property = "curSettleAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "settle_number", property = "settleNumber", jdbcType = JdbcType.INTEGER),
            @Result(column = "sum_settle_amount", property = "sumSettleAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "eng_cal_status", property = "engCalStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "eng_sum_status", property = "engSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "contract_in_settle_sum_status", property = "contractInSettleSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "eng_check_value_sum_status", property = "engCheckValueSumStatus", jdbcType = JdbcType.INTEGER),
            @Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
            @Result(column = "cur_actual_pay_amount", property = "curActualPayAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "cur_payable_amount", property = "curPayableAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_surplus_amount", property = "sumSurplusAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_actual_pay_amount", property = "sumActualPayAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "sum_payable_amount", property = "sumPayableAmount", jdbcType = JdbcType.DOUBLE),
            @Result(column = "settle_contract", property = "settleContract", jdbcType = JdbcType.VARCHAR),
            @Result(column = "settle_attach", property = "settleAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_name", property = "contractName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "down_contract_code", property = "contract",
                    one = @One(select = "com.banry.pscm.persist.dao.DownContractMapper.selectByPrimaryKey",
                            fetchType = FetchType.EAGER))
    })
    @SelectProvider(type = SettleAccountSqlProvider.class, method = "list")
    List<SettleAccountVo> list(@Param("contractName") String contractName, @Param("status") Integer status);
}