package com.banry.pscm.persist.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import com.banry.pscm.persist.mapper.RoleUserSqlProvider;
import com.banry.pscm.service.account.RoleUser;
import com.banry.pscm.service.account.SysUsers;

public interface RoleUserMapper {

	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Delete({
        "delete from role_user",
        "where role_user_code = #{roleUserCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String roleUserCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Insert({
        "insert into role_user (role_user_code, role_code, ",
        "tenant_code, user_code, ",
        "create_user, create_date, ",
        "status)",
        "values (#{roleUserCode,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, ",
        "#{tenantCode,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, ",
        "#{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=INTEGER})"
    })
    int insert(RoleUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @InsertProvider(type=RoleUserSqlProvider.class, method="insertSelective")
    int insertSelective(RoleUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Select({
        "select",
        "role_user_code, role_code, tenant_code, user_code, create_user, create_date, ",
        "status",
        "from role_user",
        "where role_user_code = #{roleUserCode,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="role_user_code", property="roleUserCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="role_code", property="roleCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_code", property="tenantCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_code", property="userCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER)
    })
    RoleUser selectByPrimaryKey(String roleUserCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @UpdateProvider(type=RoleUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(RoleUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role_user
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Update({
        "update role_user",
        "set role_code = #{roleCode,jdbcType=VARCHAR},",
          "tenant_code = #{tenantCode,jdbcType=VARCHAR},",
          "user_code = #{userCode,jdbcType=VARCHAR},",
          "create_user = #{createUser,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=INTEGER}",
        "where role_user_code = #{roleUserCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(RoleUser record);
	
	
	@SelectProvider(type = RoleUserSqlProvider.class, method = "selectByRoleAndUserCode")
	RoleUser selectByRoleAndUserCode(String roleCode, String tenantCode, String userCode);
	
	@SelectProvider(type = RoleUserSqlProvider.class, method = "findUsersByRole")
	List<SysUsers> findUsersByRole(String roleCode, String tenantCode);
	
	@SelectProvider(type = RoleUserSqlProvider.class, method = "findUsersByRoleWithParentTenantAccount")
	List<SysUsers> findUsersByRoleWithParentTenantAccount(String roleCode, String tenantCode, String parentTenantAccount);
	
	@SelectProvider(type = RoleUserSqlProvider.class, method = "findWaitUsersByRole")
	List<SysUsers> findWaitUsersByRole(String roleCode, String tenantCode);
}