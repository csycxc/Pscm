package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.LaborWagesSqlProvider;
import com.banry.pscm.service.labour.LaborWages;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface LaborWagesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @Delete({
        "delete from labor_wages",
        "where wage_id = #{wageId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String wageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @Insert({
        "insert into labor_wages (wage_id, in_id, ",
        "`year_month`, work_days, ",
        "worked_loads, ",
        "gross_pay, net_pay, remark)",
        "values (#{wageId,jdbcType=VARCHAR}, #{inId,jdbcType=VARCHAR}, ",
        "#{yearMonth,jdbcType=DATE}, #{workDays,jdbcType=INTEGER}, ",
        "#{workedLoads,jdbcType=DOUBLE}, #{grossPay,jdbcType=DOUBLE}, ",
        "#{netPay,jdbcType=DOUBLE}, #{remark,jdbcType=LONGVARCHAR})"
    })
    int insert(LaborWages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @InsertProvider(type=LaborWagesSqlProvider.class, method="insertSelective")
    int insertSelective(LaborWages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "wage_id, in_id, `year_month`, work_days, worked_loads, ",
        "gross_pay, net_pay, remark",
        "from labor_wages",
        "where wage_id = #{wageId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="wage_id", property="wageId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="in_id", property="inId", jdbcType=JdbcType.VARCHAR),
        @Result(column="year_month", property="yearMonth", jdbcType=JdbcType.DATE),
        @Result(column="work_days", property="workDays", jdbcType=JdbcType.INTEGER),
        @Result(column="worked_loads", property="workedLoads", jdbcType=JdbcType.DOUBLE),
        @Result(column="gross_pay", property="grossPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="net_pay", property="netPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="remark", property="remark", jdbcType=JdbcType.LONGVARCHAR)
    })
    LaborWages selectByPrimaryKey(String wageId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @UpdateProvider(type=LaborWagesSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(LaborWages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @Update({
        "update labor_wages",
        "set in_id = #{inId,jdbcType=VARCHAR},",
          "`year_month` = #{yearMonth,jdbcType=DATE},",
          "work_days = #{workDays,jdbcType=INTEGER},",
          "worked_loads = #{workedLoads,jdbcType=DOUBLE},",
          "gross_pay = #{grossPay,jdbcType=DOUBLE},",
          "net_pay = #{netPay,jdbcType=DOUBLE},",
          "remark = #{remark,jdbcType=LONGVARCHAR}",
        "where wage_id = #{wageId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(LaborWages record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_wages
     *
     * @mbggenerated
     */
    @Update({
        "update labor_wages",
        "set in_id = #{inId,jdbcType=VARCHAR},",
          "`year_month` = #{yearMonth,jdbcType=DATE},",
          "work_days = #{workDays,jdbcType=INTEGER},",
          "worked_loads = #{workedLoads,jdbcType=DOUBLE},",
          "gross_pay = #{grossPay,jdbcType=DOUBLE},",
          "net_pay = #{netPay,jdbcType=DOUBLE}",
        "where wage_id = #{wageId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(LaborWages record);
}