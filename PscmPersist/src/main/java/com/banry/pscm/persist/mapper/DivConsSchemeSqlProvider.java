package com.banry.pscm.persist.mapper;

import org.apache.ibatis.jdbc.SQL;

import com.banry.pscm.service.schedule.DivConsScheme;

public class DivConsSchemeSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table div_cons_scheme
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    public String insertSelective(DivConsScheme record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("div_cons_scheme");
        
        if (record.getSchemeCode() != null) {
            sql.VALUES("scheme_code", "#{schemeCode,jdbcType=VARCHAR}");
        }
        
        if (record.getDivisionSnCode() != null) {
            sql.VALUES("division_sn_code", "#{divisionSnCode,jdbcType=VARCHAR}");
        }
        
        if (record.getDivLevel() != null) {
            sql.VALUES("div_level", "#{divLevel,jdbcType=CHAR}");
        }
        
        if (record.getName() != null) {
            sql.VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeType() != null) {
            sql.VALUES("scheme_type", "#{schemeType,jdbcType=VARCHAR}");
        }
        
        if (record.getDescription() != null) {
            sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeVersion() != null) {
            sql.VALUES("scheme_version", "#{schemeVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getSubmitter() != null) {
            sql.VALUES("submitter", "#{submitter,jdbcType=VARCHAR}");
        }
        
        if (record.getVersionDate() != null) {
            sql.VALUES("version_date", "#{versionDate,jdbcType=DATE}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getSchemePath() != null) {
            sql.VALUES("scheme_path", "#{schemePath,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeAttach() != null) {
            sql.VALUES("scheme_attach", "#{schemeAttach,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table div_cons_scheme
     *
     * @mbg.generated Tue Jun 12 14:31:02 CST 2018
     */
    public String updateByPrimaryKeySelective(DivConsScheme record) {
        SQL sql = new SQL();
        sql.UPDATE("div_cons_scheme");
        
        if (record.getDivisionSnCode() != null) {
            sql.SET("division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}");
        }
        
        if (record.getDivLevel() != null) {
            sql.SET("div_level = #{divLevel,jdbcType=CHAR}");
        }
        
        if (record.getName() != null) {
            sql.SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeType() != null) {
            sql.SET("scheme_type = #{schemeType,jdbcType=VARCHAR}");
        }
        
        if (record.getDescription() != null) {
            sql.SET("description = #{description,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeVersion() != null) {
            sql.SET("scheme_version = #{schemeVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getSubmitter() != null) {
            sql.SET("submitter = #{submitter,jdbcType=VARCHAR}");
        }
        
        if (record.getVersionDate() != null) {
            sql.SET("version_date = #{versionDate,jdbcType=DATE}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getSchemePath() != null) {
            sql.SET("scheme_path = #{schemePath,jdbcType=VARCHAR}");
        }
        
        if (record.getSchemeAttach() != null) {
            sql.SET("scheme_attach = #{schemeAttach,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("scheme_code = #{schemeCode,jdbcType=VARCHAR}");
        
        return sql.toString();
    }
}