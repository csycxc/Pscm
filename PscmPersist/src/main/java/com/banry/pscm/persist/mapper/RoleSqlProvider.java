package com.banry.pscm.persist.mapper;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.jdbc.SQL;

import com.banry.pscm.service.account.Role;

public class RoleSqlProvider {

	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    public String insertSelective(Role record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("role");
        
        if (record.getRoleCode() != null) {
            sql.VALUES("role_code", "#{roleCode,jdbcType=VARCHAR}");
        }
        
        if (record.getTenantCode() != null) {
            sql.VALUES("tenant_code", "#{tenantCode,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptCode() != null) {
            sql.VALUES("dept_code", "#{deptCode,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            sql.VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.VALUES("create_user", "#{createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.VALUES("create_date", "#{createDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    public String updateByPrimaryKeySelective(Role record) {
        SQL sql = new SQL();
        sql.UPDATE("role");
        
        if (record.getDeptCode() != null) {
            sql.SET("dept_code = #{deptCode,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            sql.SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.SET("create_user = #{createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("create_date = #{createDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        sql.WHERE("role_code = #{roleCode,jdbcType=VARCHAR}");
        sql.WHERE("tenant_code = #{tenantCode,jdbcType=VARCHAR}");
        
        return sql.toString();
    }
	
	public String selectRoleByUserCode(@Param("tenantCode") String tenantCode, @Param("userCode") String userCode) {
		return "select * from role a where a.status=1 and tenant_code='" + tenantCode + "'"
				+ " and exists (select 1 from role_user b where a.role_code = b.role_code and a.tenant_code = b.tenant_code and b.user_code='" + userCode + "')";
	}
	
	public String selectEngDivByUserCode(@Param("tenantAccount") String tenantAccount, @Param("userCode") String userCode) {
		return "select div_code from tenant_" + tenantAccount + ".role_division a"
				+ " where exists (select 1 from role_user b where a.role_code = b.role_code and a.tenant_code = b.tenant_code and b.user_code='" + userCode + "')";
	}
	
	public String selectBySqlWhere(String sqlWhere) {
		SQL sql = new SQL();
		sql.SELECT("a.*");
		sql.FROM("role a");
		sql.WHERE("a.status=1");
		if (sqlWhere != null && !"".equals(sqlWhere)) {
			sql.WHERE(sqlWhere);
		}
		return sql.toString();
	}
}