package com.banry.pscm.persist.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.One;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

import com.banry.pscm.persist.mapper.HiddenTroubleBillSqlProvider;
import com.banry.pscm.service.engsafety.HiddenTroubleBill;
import com.banry.pscm.service.util.EnumVar;

public interface HiddenTroubleBillMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@Delete({ "delete from hidden_trouble_bill", "where trouble_code = #{troubleCode,jdbcType=VARCHAR}" })
	int deleteByPrimaryKey(String troubleCode);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@Insert({ "insert into hidden_trouble_bill (trouble_code, div_item_code, ", "div_level, trouble_cate, ",
			"trouble_level, invest_item, ", "invest_content, description, ", "trouble_from, from_code)",
			"values (#{troubleCode,jdbcType=VARCHAR}, #{divItemCode,jdbcType=VARCHAR}, ",
			"#{divLevel,jdbcType=INTEGER}, #{troubleCate.enumValue,jdbcType=INTEGER}, ",
			"#{troubleLevel.enumValue,jdbcType=INTEGER}, #{investItem,jdbcType=VARCHAR}, ",
			"#{investContent,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
			"#{troubleFrom,jdbcType=VARCHAR}, #{fromCode,jdbcType=VARCHAR})" })
	int insert(HiddenTroubleBill record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@InsertProvider(type = HiddenTroubleBillSqlProvider.class, method = "insertSelective")
	int insertSelective(HiddenTroubleBill record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@Select({ "select", "trouble_code, div_item_code, div_level, trouble_cate, trouble_level, invest_item, ",
			"invest_content, description, trouble_from, from_code, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code", "from hidden_trouble_bill",
			"where trouble_code = #{troubleCode,jdbcType=VARCHAR}" })
	@ResultMap("BaseHiddenTrouble")
	HiddenTroubleBill selectByPrimaryKey(@Param("troubleCode") String troubleCode, @Param("parent_tenant_code") String parent_tenant_code);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@UpdateProvider(type = HiddenTroubleBillSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(HiddenTroubleBill record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble_bill
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	@Update({ "update hidden_trouble_bill", "set div_item_code = #{divItemCode,jdbcType=VARCHAR},",
			"div_level = #{divLevel,jdbcType=INTEGER},", "trouble_cate = #{troubleCate.enumValue,jdbcType=INTEGER},",
			"trouble_level = #{troubleLevel.enumValue,jdbcType=INTEGER},", "invest_item = #{investItem,jdbcType=VARCHAR},",
			"invest_content = #{investContent,jdbcType=VARCHAR},", "description = #{description,jdbcType=VARCHAR},",
			"trouble_from = #{troubleFrom,jdbcType=VARCHAR},", "from_code = #{fromCode,jdbcType=VARCHAR}",
			"where trouble_code = #{troubleCode,jdbcType=VARCHAR}" })
	int updateByPrimaryKey(HiddenTroubleBill record);
	
	@Select({ "select", "trouble_code, div_item_code, div_level, trouble_cate, trouble_level, invest_item, " + 
			"invest_content, description, trouble_from, from_code, ifnull(c.frequency,0) frequency, concat('tenant_',#{parent_tenant_code,jdbcType=VARCHAR}) parent_tenant_code", "from hidden_trouble_bill a",
		"left join (select c.trouble_code, count(*) frequency from hidden_trouble c where status<>1 and c.start_date = DATE_FORMAT(now(),'%Y-%m-%d')",
		"group by trouble_code) c on a.trouble_code = c.trouble_code",
		"where FIND_IN_SET(a.div_item_code,getParentList(#{divItemCode,jdbcType=VARCHAR})) and a.trouble_from = #{troubleFrom,jdbcType=VARCHAR}" })
	@Results({ @Result(column = "trouble_code", property = "troubleCode", jdbcType = JdbcType.VARCHAR, id = true),
		@Result(column = "div_item_code", property = "divItemCode", jdbcType = JdbcType.VARCHAR),
		@Result(column = "div_level", property = "divLevel", jdbcType = JdbcType.INTEGER),
		@Result(column = "{trouble_cate = trouble_cate,parent_tenant_code = parent_tenant_code}", property = "troubleCate",
			one=@One(
					select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleCateValue",
					fetchType=FetchType.EAGER
					)
				),
		@Result(column = "{trouble_level = trouble_level,parent_tenant_code = parent_tenant_code}", property = "troubleLevel",
		one=@One(
				select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleLevelValue",
				fetchType=FetchType.EAGER
				)
			),
		@Result(column = "invest_item", property = "investItem", jdbcType = JdbcType.VARCHAR),
		@Result(column = "invest_content", property = "investContent", jdbcType = JdbcType.VARCHAR),
		@Result(column = "description", property = "description", jdbcType = JdbcType.VARCHAR),
		@Result(column = "trouble_from", property = "troubleFrom", jdbcType = JdbcType.VARCHAR),
		@Result(column = "from_code", property = "fromCode", jdbcType = JdbcType.VARCHAR) })
	List<HiddenTroubleBill> selectByDivItemCode(@Param("divItemCode") String divItemCode, @Param("troubleFrom")String troubleFrom, @Param("parent_tenant_code") String parent_tenant_code);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectBySqlWhere")
	@ResultMap("BaseHiddenTrouble")
	List<HiddenTroubleBill> selectBySqlWhere(@Param("sqlWhere") String sqlWhere, @Param("parent_tenant_code") String parent_tenant_code);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectTroubleLevelValue")
    @Results(id="BaseEnumVar",value={
        @Result(column="enum_name", property="enumName", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="enum_value", property="enumValue", jdbcType=JdbcType.INTEGER),
        @Result(column="enum_value_name", property="enumValueName", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    EnumVar selectTroubleLevelValue(Map<String,Object> map);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectTroubleCateValue")
    @ResultMap("BaseEnumVar")
    EnumVar selectTroubleCateValue(Map<String,Object> map);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectTroubleCateInvestItem")
	@Results({
		@Result(column = "{trouble_cate = trouble_cate,parent_tenant_code = parent_tenant_code}", property = "troubleCate",
			one=@One(
					select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleCateValue",
					fetchType=FetchType.EAGER
					)
				)
	})
	List<HiddenTroubleBill> selectTroubleCateInvestItem(@Param("sqlWhere") String sqlWhere, @Param("parent_tenant_code") String parent_tenant_code);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectOrderByRate")
	@Results({
		@Result(column = "{trouble_cate = trouble_cate,parent_tenant_code = parent_tenant_code}", property = "troubleCate",
			one=@One(
					select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleCateValue",
					fetchType=FetchType.EAGER
					)
				)
	})
	List<HiddenTroubleBill> selectOrderByRate(String divItemCode, String parent_tenant_code);
	
	/**
	 * @param divItemCode
	 * @return
	 */
	@Select({"select ",
		"trouble_code,div_item_code,div_level,trouble_cate,trouble_level,invest_item,invest_content,description, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code ",
    	"from hidden_trouble_bill ",
    	"where div_item_code = #{divItemCode,jdbcType=VARCHAR} "})
    @Results(id="BaseHiddenTrouble",value={
    	@Result(column = "trouble_code", property = "troubleCode", jdbcType = JdbcType.VARCHAR, id = true),
		@Result(column = "div_item_code", property = "divItemCode", jdbcType = JdbcType.VARCHAR),
		@Result(column = "div_level", property = "divLevel", jdbcType = JdbcType.INTEGER),
		@Result(column = "{trouble_cate = trouble_cate,parent_tenant_code = parent_tenant_code}", property = "troubleCate",
			one=@One(
					select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleCateValue",
					fetchType=FetchType.EAGER
					)
				),
		@Result(column = "{trouble_level = trouble_level,parent_tenant_code = parent_tenant_code}", property = "troubleLevel",
		one=@One(
				select="com.banry.pscm.persist.dao.HiddenTroubleBillMapper.selectTroubleLevelValue",
				fetchType=FetchType.EAGER
				)
			),
		@Result(column = "invest_item", property = "investItem", jdbcType = JdbcType.VARCHAR),
		@Result(column = "invest_content", property = "investContent", jdbcType = JdbcType.VARCHAR),
		@Result(column = "description", property = "description", jdbcType = JdbcType.VARCHAR) })
	List<HiddenTroubleBill> findHiddenTroublesByDivItemCode(@Param("divItemCode") String divItemCode, @Param("parent_tenant_code") String parent_tenant_code);

	
	//======================================HiddenTroubleBill======================================
	
	/**
	 * @param divItemCode
	 * @return
	 */
	@Select({"SELECT a.*, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code FROM hidden_trouble_bill a WHERE DIV_ITEM_CODE=(SELECT div_item_code FROM eng_division WHERE division_sn_code=#{divSnCode,jdbcType=VARCHAR})"})
	@ResultMap("BaseHiddenTrouble")   
	List<HiddenTroubleBill> findHiddenTroublesByDivSnCode(@Param("divSnCode") String divSnCode, @Param("parent_tenant_code") String parent_tenant_code);
	
	/**
	 * @param troubleCate
	 * @return
	 */
	@Select({"select ",
		"trouble_code,div_item_code,div_level,trouble_cate,trouble_level,invest_item,invest_content,description, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code ",
    	"from hidden_trouble_bill ",
    	"where trouble_cate like concat('%',#{troubleCate,jdbcType=VARCHAR},'%')  "})
    @ResultMap("BaseHiddenTrouble")
	List<HiddenTroubleBill> findHiddenTroublesByTroubleCate(@Param("troubleCate") String troubleCate, @Param("parent_tenant_code") String parent_tenant_code);

	/**
	 * @param investItem 排查项目
	 * @return
	 */
	@Select({"select ",
		"trouble_code,div_item_code,div_level,trouble_cate,trouble_level,invest_item,invest_content,description, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code ",
    	"from hidden_trouble_bill ",
    	"where invest_item like concat('%',#{investItem,jdbcType=VARCHAR},'%')  "})
	@ResultMap("BaseHiddenTrouble")
	List<HiddenTroubleBill> findHiddenTroublesByInvestItem(@Param("investItem") String investItem, @Param("parent_tenant_code") String parent_tenant_code);

	/**
	 * @param investContent
	 * @return
	 */
	@Select({"select ",
		"trouble_code,div_item_code,div_level,trouble_cate,trouble_level,invest_item,invest_content,description, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code ",
    	"from hidden_trouble_bill ",
    	"where invest_content like concat('%',#{investContent,jdbcType=VARCHAR},'%')  "})
	@ResultMap("BaseHiddenTrouble")
	List<HiddenTroubleBill> findHiddenTroublesByInvestContent(@Param("investContent") String investContent, @Param("parent_tenant_code") String parent_tenant_code);

	/**
	 * @return
	 */
	@Select({"select ",
		"trouble_code,div_item_code,div_level,trouble_cate,trouble_level,invest_item,invest_content,description, #{parent_tenant_code,jdbcType=VARCHAR} parent_tenant_code ",
    	"from hidden_trouble_bill "})
	@ResultMap("BaseHiddenTrouble")
	List<HiddenTroubleBill> findAllHiddenTrouble(String parent_tenant_code);
	
	/**
	 * @param divisionsncode
	 * @return
	 */
	@Delete("delete from hidden_trouble_bill where div_item_code = "
			+ "(select div_item_code from eng_division where division_sn_code = #{divisionsncode})")
	int deleteHiddenTroubleBillByDivisionSnCode(String divisionsncode);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectHiddenTroubleBillByMap")
	@ResultMap("BaseHiddenTrouble")
	HiddenTroubleBill selectHiddenTroubleBillByMap(Map<String,Object> map);

	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectAllTroubleCate")
	@ResultMap("BaseEnumVar")
	List<EnumVar> findEnumVarAllTroubleCate(String parentTenantCode);
	
	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "selectAllTroubleLevel")
	@ResultMap("BaseEnumVar")
	List<EnumVar> findEnumVarAllTroubleLevel(String parentTenantCode);

	@SelectProvider(type = HiddenTroubleBillSqlProvider.class, method = "findEnumVarByEnumValueName")
	@ResultMap("BaseEnumVar")
	EnumVar findEnumVarByEnumValueName(String enumValueName,String parentTenantCode);
	
}