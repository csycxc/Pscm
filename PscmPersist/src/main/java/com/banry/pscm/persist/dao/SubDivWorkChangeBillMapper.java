package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.SubDivWorkChangeBillSqlProvider;
import com.banry.pscm.service.enums.ChangeTypeEnumHandler;
import com.banry.pscm.service.schedule.SubDivWorkBillChange;
import com.banry.pscm.service.schedule.SubDivWorkChangeBill;
import com.banry.pscm.service.schedule.SubDivWorkChangeBillKey;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.EnumTypeHandler;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Map;

@Component
public interface SubDivWorkChangeBillMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @Delete({
        "delete from sub_div_work_change_bill",
        "where division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}",
          "and change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(SubDivWorkChangeBillKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @Insert({
        "insert into sub_div_work_change_bill (division_sn_code, change_code, ",
        "change_type, supplier_credit_code, ",
        "eng_num_before, eng_num_change, ",
        "eng_num_after, unit_price_before, ",
        "unit_price_change, unit_price_after, ",
        "changed_contract_code)",
        "values (#{divisionSnCode,jdbcType=VARCHAR}, #{changeCode,jdbcType=VARCHAR}, ",
        "#{changeType.code,jdbcType=INTEGER}, #{supplierCreditCode,jdbcType=VARCHAR}, ",
        "#{engNumBefore,jdbcType=DOUBLE}, #{engNumChange,jdbcType=DOUBLE}, ",
        "#{engNumAfter,jdbcType=DOUBLE}, #{unitPriceBefore,jdbcType=DOUBLE}, ",
        "#{unitPriceChange,jdbcType=DOUBLE}, #{unitPriceAfter,jdbcType=DOUBLE}, ",
        "#{changedContractCode,jdbcType=VARCHAR})"
    })
    int insert(SubDivWorkChangeBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @InsertProvider(type= SubDivWorkChangeBillSqlProvider.class, method="insertSelective")
    int insertSelective(SubDivWorkChangeBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "division_sn_code, change_code, change_type, supplier_credit_code, eng_num_before, ",
        "eng_num_change, eng_num_after, unit_price_before, unit_price_change, unit_price_after, ",
        "changed_contract_code",
        "from sub_div_work_change_bill",
        "where division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}",
          "and change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    @Results(id = "ChangeBaseResultMap",value = {
        @Result(column="division_sn_code", property="divisionSnCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="change_code", property="changeCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="change_type", property="changeType", typeHandler = ChangeTypeEnumHandler.class),
        @Result(column="supplier_credit_code", property="supplierCreditCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="eng_num_before", property="engNumBefore", jdbcType=JdbcType.DOUBLE),
        @Result(column="eng_num_change", property="engNumChange", jdbcType=JdbcType.DOUBLE),
        @Result(column="eng_num_after", property="engNumAfter", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_price_before", property="unitPriceBefore", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_price_change", property="unitPriceChange", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_price_after", property="unitPriceAfter", jdbcType=JdbcType.DOUBLE),
        @Result(column="changed_contract_code", property="changedContractCode", jdbcType=JdbcType.VARCHAR),
            @Result(column = "change_code", property = "contractChange", one = @One(
                    select = "com.banry.pscm.persist.dao.DownContractChangeMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            )),
            @Result(column = "division_sn_code", property = "subDivWorkBill", one = @One(
                    select = "com.banry.pscm.persist.dao.SubDivWorkBillMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            ))
    })
    SubDivWorkChangeBill selectByPrimaryKey(SubDivWorkChangeBillKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SubDivWorkChangeBillSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SubDivWorkChangeBill record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sub_div_work_change_bill
     *
     * @mbggenerated
     */
    @Update({
        "update sub_div_work_change_bill",
        "set change_type = #{changeType.code,jdbcType=INTEGER},",
          "supplier_credit_code = #{supplierCreditCode,jdbcType=VARCHAR},",
          "eng_num_before = #{engNumBefore,jdbcType=DOUBLE},",
          "eng_num_change = #{engNumChange,jdbcType=DOUBLE},",
          "eng_num_after = #{engNumAfter,jdbcType=DOUBLE},",
          "unit_price_before = #{unitPriceBefore,jdbcType=DOUBLE},",
          "unit_price_change = #{unitPriceChange,jdbcType=DOUBLE},",
          "unit_price_after = #{unitPriceAfter,jdbcType=DOUBLE},",
          "changed_contract_code = #{changedContractCode,jdbcType=VARCHAR}",
        "where division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}",
          "and change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(SubDivWorkChangeBill record);

    @Select({
            "SELECT",
            "	a.division_sn_code,",
            "	a.`name`,",
            "	a.charact_des,",
            "	a.unit,",
            "	a.bid_map_quan,",
            "	a.raw_con_map_quan,",
            "	a.cons_map_sum_vary_quan,",
            "	a.calculate_unit_price,",
            "	a.contract_unit_price,",
            "	a.comp_unit_price,",
            "	a.temporary_measure_price,",
            "	a.quota_manual_fee,",
            "	a.quota_code,",
            "	a.tender_plan_code,",
            "	a.tender_result_code,",
            "	a.contract_code,",
            "	a.`status`,",
            "	a.supplier_credit_code,",
            "	b.change_code,",
            "	b.change_type,",
            "	b.supplier_credit_code,",
            "	b.eng_num_before,",
            "	b.eng_num_change,",
            "	b.eng_num_after,",
            "	b.unit_price_before,",
            "	b.unit_price_change,",
            "	b.unit_price_after,",
            "	b.changed_contract_code ",
            "FROM",
            "	sub_div_work_bill AS a",
            "	LEFT JOIN sub_div_work_change_bill AS b ON a.division_sn_code = b.division_sn_code ",
            "	AND b.change_code = #{changeCode, jdbcType=VARCHAR} ",
            "WHERE",
            "	a.contract_code = #{contractCode, jdbcType=VARCHAR} ",
            "	OR b.changed_contract_code = #{contractCode, jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="division_sn_code", property="divisionSnCode", id=true,
                    one=@One(
                            select="com.banry.pscm.persist.dao.EngDivisionMapper.selectByPrimaryKey",
                            fetchType=FetchType.EAGER
                    )),
            @Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
            @Result(column = "charact_des", property = "charactDes", jdbcType = JdbcType.VARCHAR),
            @Result(column = "unit", property = "unit", jdbcType = JdbcType.VARCHAR),
            @Result(column = "bid_map_quan", property = "bidMapQuan", jdbcType = JdbcType.DOUBLE),
            @Result(column = "raw_con_map_quan", property = "rawConMapQuan", jdbcType = JdbcType.DOUBLE),
            @Result(column = "cons_map_sum_vary_quan", property = "consMapSumVaryQuan", jdbcType = JdbcType.DOUBLE),
            @Result(column = "calculate_unit_price", property = "calculateUnitPrice", jdbcType = JdbcType.DOUBLE),
            @Result(column = "contract_unit_price", property = "contractUnitPrice", jdbcType = JdbcType.DOUBLE),
            @Result(column = "comp_unit_price", property = "compUnitPrice", jdbcType = JdbcType.DOUBLE),
            @Result(column = "temporary_measure_price", property = "temporaryMeasurePrice", jdbcType = JdbcType.DOUBLE),
            @Result(column = "quota_manual_fee", property = "quotaManualFee", jdbcType = JdbcType.DOUBLE),
            @Result(column = "quota_code", property = "quotaCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
            @Result(column = "tender_plan_code", property = "tenderPlanCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "tender_result_code", property = "tenderResultCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_code", property = "contractCode", jdbcType = JdbcType.VARCHAR),
            @Result(column = "supplier_credit_code", property = "supplier", one = @One(
                    select = "com.banry.pscm.persist.dao.SupplierMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            )),
            @Result(column="change_code", property="subDivWorkChangeBill.changeCode", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="change_type", property="subDivWorkChangeBill.changeType", typeHandler = ChangeTypeEnumHandler.class),
            @Result(column="supplier_credit_code", property="subDivWorkChangeBill.supplierCreditCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="eng_num_before", property="subDivWorkChangeBill.engNumBefore", jdbcType=JdbcType.DOUBLE),
            @Result(column="eng_num_change", property="subDivWorkChangeBill.engNumChange", jdbcType=JdbcType.DOUBLE),
            @Result(column="eng_num_after", property="subDivWorkChangeBill.engNumAfter", jdbcType=JdbcType.DOUBLE),
            @Result(column="unit_price_before", property="subDivWorkChangeBill.unitPriceBefore", jdbcType=JdbcType.DOUBLE),
            @Result(column="unit_price_change", property="subDivWorkChangeBill.unitPriceChange", jdbcType=JdbcType.DOUBLE),
            @Result(column="unit_price_after", property="subDivWorkChangeBill.unitPriceAfter", jdbcType=JdbcType.DOUBLE),
            @Result(column="changed_contract_code", property="subDivWorkChangeBill.changedContractCode", jdbcType=JdbcType.VARCHAR),
            @Result(column = "change_code", property = "subDivWorkChangeBill.contractChange", one = @One(
                    select = "com.banry.pscm.persist.dao.DownContractChangeMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            ))
    })
    List<SubDivWorkBillChange> findWorkBillsByCodes(@Param("contractCode") String contractCode, @Param("changeCode") String changeCode);


}