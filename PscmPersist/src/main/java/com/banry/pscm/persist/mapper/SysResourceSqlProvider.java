package com.banry.pscm.persist.mapper;

import com.banry.pscm.service.account.*;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.jdbc.SQL;

public class SysResourceSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_resource
	 * @mbg.generated  Fri Jul 13 22:06:18 CST 2018
	 */
	public String insertSelective(SysResource record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("sys_resource");
		if (record.getResourceCode() != null) {
			sql.VALUES("resource_code", "#{resourceCode,jdbcType=VARCHAR}");
		}
		if (record.getParentResourceCode() != null) {
			sql.VALUES("parent_resource_code", "#{parentResourceCode,jdbcType=VARCHAR}");
		}
		if (record.getTenantCode() != null) {
			sql.VALUES("tenant_code", "#{tenantCode,jdbcType=VARCHAR}");
		}
		if (record.getResourceName() != null) {
			sql.VALUES("resource_name", "#{resourceName,jdbcType=VARCHAR}");
		}
		if (record.getResourceType() != null) {
			sql.VALUES("resource_type", "#{resourceType,jdbcType=VARCHAR}");
		}
		if (record.getResourceUrl() != null) {
			sql.VALUES("resource_url", "#{resourceUrl,jdbcType=VARCHAR}");
		}
		if (record.getIsMemu() != null) {
			sql.VALUES("is_memu", "#{isMemu,jdbcType=INTEGER}");
		}
		if (record.getIsDir() != null) {
			sql.VALUES("is_dir", "#{isDir,jdbcType=INTEGER}");
		}
		if (record.getStatus() != null) {
			sql.VALUES("status", "#{status,jdbcType=INTEGER}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sys_resource
	 * @mbg.generated  Fri Jul 13 22:06:18 CST 2018
	 */
	public String updateByPrimaryKeySelective(SysResource record) {
		SQL sql = new SQL();
		sql.UPDATE("sys_resource");
		if (record.getParentResourceCode() != null) {
			sql.SET("parent_resource_code = #{parentResourceCode,jdbcType=VARCHAR}");
		}
		if (record.getTenantCode() != null) {
			sql.SET("tenant_code = #{tenantCode,jdbcType=VARCHAR}");
		}
		if (record.getResourceName() != null) {
			sql.SET("resource_name = #{resourceName,jdbcType=VARCHAR}");
		}
		if (record.getResourceType() != null) {
			sql.SET("resource_type = #{resourceType,jdbcType=VARCHAR}");
		}
		if (record.getResourceUrl() != null) {
			sql.SET("resource_url = #{resourceUrl,jdbcType=VARCHAR}");
		}
		if (record.getIsMemu() != null) {
			sql.SET("is_memu = #{isMemu,jdbcType=INTEGER}");
		}
		if (record.getIsDir() != null) {
			sql.SET("is_dir = #{isDir,jdbcType=INTEGER}");
		}
		if (record.getStatus() != null) {
			sql.SET("status = #{status,jdbcType=INTEGER}");
		}
		sql.WHERE("resource_code = #{resourceCode,jdbcType=VARCHAR}");
		return sql.toString();
	}
	
	public String selectResourceByRoleCode(@Param("roleCode") String roleCode, @Param("tenantCode") String tenantCode) {
		return "select * from pscm.sys_resource a where status=1 and exists (select 1 from sys_roles_resources b where a.resource_code= b.resource_code and b.tenant_code = '" + tenantCode + "'and b.role_code='" + roleCode + "')";
	}
	
	public String selectResourceByUserCode(@Param("userCode") String userCode, @Param("prCode") String prCode, @Param("menu") String menu, @Param("tenantCode") String tenantCode) {
		String sql = "select * from pscm.sys_resource a where status=1 and is_memu=" + menu
				+ " and exists (select 1 from sys_roles_resources b, role_user c where  a.resource_code= b.resource_code and b.role_code=c.role_code and b.tenant_code=c.tenant_code "
				+ " and c.tenant_code = '" + tenantCode + "' and c.user_code='" + userCode + "')";
		if (prCode != null && !"".equals("prCode")) {
			sql += " and a.parent_resource_code='" + prCode + "'";
		}
		return sql;
	}
}