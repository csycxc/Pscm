package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.SysUsersSqlProvider;
import com.banry.pscm.service.account.SysUsers;
import com.banry.pscm.service.account.SysUsersKey;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface SysUsersMapper {

	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Delete({
        "delete from sys_users",
        "where user_code = #{userCode,jdbcType=VARCHAR}",
          "and tenant_code = #{tenantCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(SysUsersKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Insert({
        "insert into sys_users (user_code, tenant_code, ",
        "user_name, user_password, ",
        "encryption, create_user, ",
        "create_date, status, ",
        "dept_code, position_code, ",
        "alias, last_login_time, ",
        "login_number, description, ",
        "telephone, email)",
        "values (#{userCode,jdbcType=VARCHAR}, #{tenantCode,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, ",
        "#{encryption,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, ",
        "#{deptCode,jdbcType=VARCHAR}, #{positionCode,jdbcType=VARCHAR}, ",
        "#{alias,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, ",
        "#{loginNumber,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, ",
        "#{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})"
    })
    int insert(SysUsers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @InsertProvider(type=SysUsersSqlProvider.class, method="insertSelective")
    int insertSelective(SysUsers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Select({
        "select",
        "user_code, tenant_code, user_name, user_password, encryption, create_user, create_date, ",
        "status, dept_code, position_code, alias, last_login_time, login_number, description, ",
        "telephone, email",
        "from sys_users",
        "where user_code = #{userCode,jdbcType=VARCHAR}",
          "and tenant_code = #{tenantCode,jdbcType=VARCHAR}"
    })
    @Results(id="BaseSysUsers",value={
        @Result(column="user_code", property="userCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="tenant_code", property="tenantCode", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_password", property="userPassword", jdbcType=JdbcType.VARCHAR),
        @Result(column="encryption", property="encryption", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_date", property="createDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="dept_code", property="deptCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="position_code", property="positionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="alias", property="alias", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_login_time", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="login_number", property="loginNumber", jdbcType=JdbcType.INTEGER),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="telephone", property="telephone", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR)
    })
    SysUsers selectByPrimaryKey(SysUsersKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @UpdateProvider(type=SysUsersSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SysUsers record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_users
     *
     * @mbg.generated Fri Jul 13 09:30:09 CST 2018
     */
    @Update({
        "update sys_users",
        "set user_name = #{userName,jdbcType=VARCHAR},",
          "user_password = #{userPassword,jdbcType=VARCHAR},",
          "encryption = #{encryption,jdbcType=VARCHAR},",
          "create_user = #{createUser,jdbcType=VARCHAR},",
          "create_date = #{createDate,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=INTEGER},",
          "dept_code = #{deptCode,jdbcType=VARCHAR},",
          "position_code = #{positionCode,jdbcType=VARCHAR},",
          "alias = #{alias,jdbcType=VARCHAR},",
          "last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},",
          "login_number = #{loginNumber,jdbcType=INTEGER},",
          "description = #{description,jdbcType=VARCHAR},",
          "telephone = #{telephone,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR}",
        "where user_code = #{userCode,jdbcType=VARCHAR}",
          "and tenant_code = #{tenantCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(SysUsers record);
    
    @Select({ "select",
        "user_code, tenant_code, user_name, user_password, encryption, create_user, create_date, ",
        "status, dept_code, position_code, alias, last_login_time, login_number, description, ",
        "telephone, email",
        "from sys_users", "where telephone = #{telephone,jdbcType=VARCHAR}" })
    @ResultMap("BaseSysUsers")
	SysUsers selectByTelephone(String telephone);

	@Select({
        "select",
        "user_code, tenant_code, user_name, user_password, encryption, create_user, create_date, ",
        "status, dept_code, position_code, alias, last_login_time, login_number, description, ",
        "telephone, email",
        "from sys_users",
        "where tenant_code = #{tenantCode,jdbcType=VARCHAR} or '' = #{tenantCode,jdbcType=VARCHAR}"
    })
	@ResultMap("BaseSysUsers")
	List<SysUsers> selectAll(String tenantCode);
	
	@SelectProvider(type = SysUsersSqlProvider.class, method = "checkEngDivAuthority")
	String checkEngDivAuthority(String userCode, String divSnCode);
	
	@SelectProvider(type = SysUsersSqlProvider.class, method = "selectSafetyOfficerByDivSnCode")
	List<SysUsers> selectSafetyOfficerByDivSnCode(String divSnCode, String parentTenantAccount);
	
	
	@Select({ "select", "user_code, tenant_code, user_name, user_password, encryption, create_user, create_date, ",
        "status, dept_code, position_code, alias, last_login_time, login_number, description, ",
        "telephone, email",
		"from tenant_${parentTenantAccount}.sys_users", "where user_code = #{usercode,jdbcType=VARCHAR} and tenant_code = #{tenantCode,jdbcType=VARCHAR}" })
	@ResultMap("BaseSysUsers")
	SysUsers selectByPrimaryKeyAndTenantAccount(@Param("usercode")String usercode, @Param("tenantCode")String tenantCode, @Param("parentTenantAccount")String parentTenantAccount);
}