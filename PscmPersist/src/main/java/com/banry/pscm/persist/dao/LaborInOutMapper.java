package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.LaborInOutSqlProvider;
import com.banry.pscm.service.labour.LaborInOut;
import com.banry.pscm.service.labour.LaborInOutWithBLOBs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface LaborInOutMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @Delete({
        "delete from labor_in_out",
        "where in_id = #{inId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String inId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @Insert({
        "insert into labor_in_out (in_id, id_number, ",
        "in_work_type, down_contract_code, ",
        "train_code, ",
        "exam_score, in_date, out_date, ",
        "out_why, reamrk, ",
        "out_photo, in_id_photo,wage_model,wage_unit_price,wage_umint)",
        "values (#{inId,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, ",
        "#{inWorkType,jdbcType=INTEGER}, #{downContractCode,jdbcType=VARCHAR}, ",
        "#{trainCode,jdbcType=VARCHAR}, ",
        "#{examScore,jdbcType=DOUBLE}, #{inDate,jdbcType=DATE}, #{outDate,jdbcType=DATE}, ",
        "#{outWhy,jdbcType=VARCHAR}, #{reamrk,jdbcType=VARCHAR}, ",
        "#{outPhoto,jdbcType=VARCHAR}, #{inIdPhoto,jdbcType=VARCHAR}, ",
        "#{wageModel,jdbcType=INTEGER}, #{wageUnitPrice,jdbcType=DOUBLE}, #{wageUmint,jdbcType=VARCHAR})"
    })
    int insert(LaborInOutWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @InsertProvider(type= LaborInOutSqlProvider.class, method="insertSelective")
    int insertSelective(LaborInOutWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "in_id, id_number, in_work_type, down_contract_code, train_code, ",
        "exam_score, in_date, out_date, out_why, reamrk, out_photo, in_id_photo, ",
        "wage_model,wage_unit_price,wage_umint",
        "from labor_in_out",
        "where in_id = #{inId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="in_id", property="inId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="id_number", property="idNumber", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_work_type", property="inWorkType", jdbcType=JdbcType.INTEGER),
        @Result(column="down_contract_code", property="downContractCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="train_code", property="trainCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="exam_score", property="examScore", jdbcType=JdbcType.DOUBLE),
        @Result(column="in_date", property="inDate", jdbcType=JdbcType.DATE),
        @Result(column="out_date", property="outDate", jdbcType=JdbcType.DATE),
        @Result(column="out_why", property="outWhy", jdbcType=JdbcType.VARCHAR),
        @Result(column="reamrk", property="reamrk", jdbcType=JdbcType.VARCHAR),
        @Result(column="out_photo", property="outPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="in_id_photo", property="inIdPhoto", jdbcType=JdbcType.VARCHAR),
        @Result(column="wage_model", property="wageModel", jdbcType=JdbcType.INTEGER),
        @Result(column="wage_unit_price", property="wageUnitPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="wage_umint", property="wageUmint", jdbcType=JdbcType.VARCHAR)
    })
    LaborInOutWithBLOBs selectByPrimaryKey(String inId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @UpdateProvider(type=LaborInOutSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(LaborInOutWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @Update({
        "update labor_in_out",
        "set id_number = #{idNumber,jdbcType=VARCHAR},",
          "in_work_type = #{inWorkType,jdbcType=INTEGER},",
          "down_contract_code = #{downContractCode,jdbcType=VARCHAR},",
          "train_code = #{trainCode,jdbcType=VARCHAR},",
          "exam_score = #{examScore,jdbcType=DOUBLE},",
          "in_date = #{inDate,jdbcType=DATE},",
          "out_date = #{outDate,jdbcType=DATE},",
          "out_why = #{outWhy,jdbcType=VARCHAR},",
          "reamrk = #{reamrk,jdbcType=VARCHAR},",
          "out_photo = #{outPhoto,jdbcType=VARCHAR},",
          "in_id_photo = #{inIdPhoto,jdbcType=VARCHAR}",
          "wage_model = #{wageModel,jdbcType=INTEGER},",
          "wage_unit_price = #{wageUnitPrice,jdbcType=DOUBLE},",
          "wage_umint = #{wageUmint,jdbcType=VARCHAR}",
        "where in_id = #{inId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(LaborInOutWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table labor_in_out
     *
     * @mbggenerated
     */
    @Update({
        "update labor_in_out",
        "set id_number = #{idNumber,jdbcType=VARCHAR},",
          "in_work_type = #{inWorkType,jdbcType=INTEGER},",
          "down_contract_code = #{downContractCode,jdbcType=VARCHAR},",
          "train_code = #{trainCode,jdbcType=VARCHAR},",
          "exam_score = #{examScore,jdbcType=DOUBLE},",
          "in_date = #{inDate,jdbcType=DATE},",
          "out_date = #{outDate,jdbcType=DATE},",
          "out_why = #{outWhy,jdbcType=VARCHAR},",
          "reamrk = #{reamrk,jdbcType=VARCHAR}",
        "where in_id = #{inId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(LaborInOut record);
}