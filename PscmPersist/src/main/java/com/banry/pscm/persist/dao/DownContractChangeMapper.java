package com.banry.pscm.persist.dao;

import com.banry.pscm.persist.mapper.DownContractChangeSqlProvider;
import com.banry.pscm.service.contract.DownContractChange;
import com.banry.pscm.service.contract.DownContractChangeVo;
import com.banry.pscm.service.contract.DownContractChangeWithBLOBs;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface DownContractChangeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @Delete({
        "delete from down_contract_change",
        "where change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String changeCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @Insert({
        "insert into down_contract_change (change_code, contract_code, ",
        "change_date, supplement_amount, ",
        "status, change_attach, ",
        "change_content, change_cause, ",
        "change_evidence)",
        "values (#{changeCode,jdbcType=VARCHAR}, #{contractCode.downContractCode,jdbcType=VARCHAR}, ",
        "#{changeDate,jdbcType=DATE}, #{supplementAmount,jdbcType=DOUBLE}, ",
        "#{status,jdbcType=INTEGER}, #{changeAttach,jdbcType=VARCHAR}, ",
        "#{changeContent,jdbcType=LONGVARCHAR}, #{changeCause,jdbcType=LONGVARCHAR}, ",
        "#{changeEvidence,jdbcType=LONGVARCHAR})"
    })
    int insert(DownContractChangeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @InsertProvider(type= DownContractChangeSqlProvider.class, method="insertSelective")
    int insertSelective(DownContractChangeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @Select({
            "SELECT",
            "	dcc.change_code,",
            "	dcc.contract_code,",
            "	dcc.change_date,",
            "	dcc.supplement_amount,",
            "	dcc.`status`,",
            "	dcc.change_attach,",
            "	dcc.change_content,",
            "	dcc.change_cause,",
            "	dcc.change_evidence,",
            "	dc.contract_name,",
            "   dc.contract_part_second,",
            "   dc.contract_amount",
            "FROM",
            "	down_contract_change dcc",
            "	LEFT JOIN down_contract dc ON dcc.contract_code = dc.down_contract_code ",
        "where dcc.change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="change_code", property="changeCode", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="contract_code", property="contractCode", one = @One(
                    select = "com.banry.pscm.persist.dao.DownContractMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            )),
            @Result(column="change_date", property="changeDate", jdbcType=JdbcType.DATE),
            @Result(column="supplement_amount", property="supplementAmount", jdbcType=JdbcType.DOUBLE),
            @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
            @Result(column="change_attach", property="changeAttach", jdbcType=JdbcType.VARCHAR),
            @Result(column="change_content", property="changeContent", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="change_cause", property="changeCause", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="change_evidence", property="changeEvidence", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column = "contract_name", property = "originalContractName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_part_second", property = "contractPartSecond", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_amount", property = "contractAmount", jdbcType = JdbcType.DOUBLE)
    })
    DownContractChangeVo selectByPrimaryKey(String changeCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @UpdateProvider(type=DownContractChangeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(DownContractChangeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @Update({
        "update down_contract_change",
        "set contract_code = #{contractCode.downContractCode,jdbcType=VARCHAR},",
          "change_date = #{changeDate,jdbcType=DATE},",
          "supplement_amount = #{supplementAmount,jdbcType=DOUBLE},",
          "status = #{status,jdbcType=INTEGER},",
          "change_attach = #{changeAttach,jdbcType=VARCHAR},",
          "change_content = #{changeContent,jdbcType=LONGVARCHAR},",
          "change_cause = #{changeCause,jdbcType=LONGVARCHAR},",
          "change_evidence = #{changeEvidence,jdbcType=LONGVARCHAR}",
        "where change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKeyWithBLOBs(DownContractChangeWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table down_contract_change
     *
     * @mbggenerated
     */
    @Update({
        "update down_contract_change",
        "set contract_code = #{contractCode.downContractCode,jdbcType=VARCHAR},",
          "change_date = #{changeDate,jdbcType=DATE},",
          "supplement_amount = #{supplementAmount,jdbcType=DOUBLE},",
          "status = #{status,jdbcType=INTEGER},",
          "change_attach = #{changeAttach,jdbcType=VARCHAR}",
        "where change_code = #{changeCode,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(DownContractChange record);

//    @Select({
//            "SELECT",
//            "	dcc.change_code,",
//            "	dcc.contract_code,",
//            "	dcc.change_date,",
//            "	dcc.supplement_amount,",
//            "	dcc.`status`,",
//            "	dcc.change_attach,",
//            "	dcc.change_content,",
//            "	dcc.change_cause,",
//            "	dcc.change_evidence,",
//            "	dc.contract_name,",
//            "   dc.contract_part_second,",
//            "   dc.contract_amount",
//            "FROM",
//            "	down_contract_change dcc",
//            "	LEFT JOIN down_contract dc ON dcc.contract_code = dc.down_contract_code ",
//            "WHERE",
//            "	dc.contract_name LIKE CONCAT('%',#{originalContractName, jdbcType=VARCHAR},'%') ",
//            "	AND dcc.`status` = #{status, jdbcType=INTEGER}"
//    })
    @Results({
            @Result(column="change_code", property="changeCode", jdbcType=JdbcType.VARCHAR, id=true),
            @Result(column="contract_code", property="contractCode", one = @One(
                    select = "com.banry.pscm.persist.dao.DownContractMapper.selectByPrimaryKey",
                    fetchType = FetchType.EAGER
            )),
            @Result(column="change_date", property="changeDate", jdbcType=JdbcType.DATE),
            @Result(column="supplement_amount", property="supplementAmount", jdbcType=JdbcType.DOUBLE),
            @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
            @Result(column="change_attach", property="changeAttach", jdbcType=JdbcType.VARCHAR),
            @Result(column="change_content", property="changeContent", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="change_cause", property="changeCause", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column="change_evidence", property="changeEvidence", jdbcType=JdbcType.LONGVARCHAR),
            @Result(column = "contract_name", property = "originalContractName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_part_second", property = "contractPartSecond", jdbcType = JdbcType.VARCHAR),
            @Result(column = "contract_amount", property = "contractAmount", jdbcType = JdbcType.DOUBLE)
    })
    @SelectProvider(type = DownContractChangeSqlProvider.class, method = "findContractChanges")
    List<DownContractChangeVo> findContractChanges(@Param("originalContractName") String originalContractName,
                                                   @Param("status") Integer status);
}