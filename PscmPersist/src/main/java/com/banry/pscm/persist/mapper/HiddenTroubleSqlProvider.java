package com.banry.pscm.persist.mapper;

import com.banry.pscm.service.engsafety.*;

import java.util.Map;

import org.apache.ibatis.jdbc.SQL;

public class HiddenTroubleSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	public String insertSelective(HiddenTrouble record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("hidden_trouble");
		if (record.getTroubleCode() != null) {
			sql.VALUES("trouble_code", "#{troubleCode,jdbcType=VARCHAR}");
		}
		if (record.getTroubleBillItemCode() != null) {
			sql.VALUES("trouble_bill_item_code", "#{troubleBillItemCode.troubleCode,jdbcType=VARCHAR}");
		}
		if (record.getDivisionSnCode() != null) {
			sql.VALUES("division_sn_code", "#{divisionSnCode,jdbcType=VARCHAR}");
		}
		if (record.getTroubleVersion() != null) {
			sql.VALUES("trouble_version", "#{troubleVersion,jdbcType=VARCHAR}");
		}
		if (record.getStartDate() != null) {
			sql.VALUES("start_date", "#{startDate,jdbcType=VARCHAR}");
		}
		if (record.getTakePlace() != null) {
			sql.VALUES("take_place", "#{takePlace,jdbcType=VARCHAR}");
		}
		if (record.getDescription() != null) {
			sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
		}
		if (record.getStatus() != null) {
			sql.VALUES("status", "#{status.enumValue,jdbcType=INTEGER}");
		}
		if (record.getDeductDate() != null) {
			sql.VALUES("deduct_date", "#{deductDate,jdbcType=DATE}");
		}
		if (record.getRealDeduct() != null) {
			sql.VALUES("real_deduct", "#{realDeduct,jdbcType=DOUBLE}");
		}
		if (record.getAmercement() != null) {
			sql.VALUES("amercement", "#{amercement,jdbcType=DOUBLE}");
		}
		if (record.getRectifyTimeLimit() != null) {
			sql.VALUES("rectify_time_limit", "#{rectifyTimeLimit,jdbcType=DATE}");
		}
		if (record.getRectifyPostpone() != null) {
			sql.VALUES("rectify_postpone", "#{rectifyPostpone,jdbcType=INTEGER}");
		}
		if (record.getTroubleAttach() != null) {
			sql.VALUES("trouble_attach", "#{troubleAttach,jdbcType=VARCHAR}");
		}
		if (record.getRectifyTime() != null) {
			sql.VALUES("rectify_time", "#{rectifyTime,jdbcType=DATE}");
		}
		if (record.getSafetyChargeUser() != null) {
			sql.VALUES("safety_charge_user", "#{safetyChargeUser,jdbcType=VARCHAR}");
		}
		if (record.getRectifySteps() != null) {
			sql.VALUES("rectify_steps", "#{rectifySteps,jdbcType=LONGVARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table hidden_trouble
	 * @mbg.generated  Fri Jun 15 11:21:07 CST 2018
	 */
	public String updateByPrimaryKeySelective(HiddenTrouble record) {
		SQL sql = new SQL();
		sql.UPDATE("hidden_trouble");
		if (record.getTroubleBillItemCode() != null) {
			sql.SET("trouble_bill_item_code = #{troubleBillItemCode.troubleCode,jdbcType=VARCHAR}");
		}
		if (record.getDivisionSnCode() != null) {
			sql.SET("division_sn_code = #{divisionSnCode,jdbcType=VARCHAR}");
		}
		if (record.getTroubleVersion() != null) {
			sql.SET("trouble_version = #{troubleVersion,jdbcType=VARCHAR}");
		}
		if (record.getStartDate() != null) {
			sql.SET("start_date = #{startDate,jdbcType=VARCHAR}");
		}
		if (record.getTakePlace() != null) {
			sql.SET("take_place = #{takePlace,jdbcType=VARCHAR}");
		}
		if (record.getDescription() != null) {
			sql.SET("description = #{description,jdbcType=VARCHAR}");
		}
		if (record.getStatus() != null) {
			sql.SET("status = #{status.enumValue,jdbcType=INTEGER}");
		}
		if (record.getDeductDate() != null) {
			sql.SET("deduct_date = #{deductDate,jdbcType=DATE}");
		}
		if (record.getRealDeduct() != null) {
			sql.SET("real_deduct = #{realDeduct,jdbcType=DOUBLE}");
		}
		if (record.getAmercement() != null) {
			sql.SET("amercement = #{amercement,jdbcType=DOUBLE}");
		}
		if (record.getRectifyTimeLimit() != null) {
			sql.SET("rectify_time_limit = #{rectifyTimeLimit,jdbcType=DATE}");
		}
		if (record.getRectifyPostpone() != null) {
			sql.SET("rectify_postpone = #{rectifyPostpone,jdbcType=INTEGER}");
		}
		if (record.getTroubleAttach() != null) {
			sql.SET("trouble_attach = #{troubleAttach,jdbcType=VARCHAR}");
		}
		if (record.getRectifyTime() != null) {
			sql.SET("rectify_time = #{rectifyTime,jdbcType=DATE}");
		}
		if (record.getSafetyChargeUser() != null) {
			sql.SET("safety_charge_user = #{safetyChargeUser,jdbcType=VARCHAR}");
		}
		if (record.getRectifySteps() != null) {
			sql.SET("rectify_steps = #{rectifySteps,jdbcType=LONGVARCHAR}");
		}
		sql.WHERE("trouble_code = #{troubleCode,jdbcType=VARCHAR}");
		return sql.toString();
	}
	
	public String selectBySqlWhere(String sqlWhere, String parentTenantCode) {
		SQL sql = new SQL();
		sql.SELECT("a.*, '" + parentTenantCode + "' parent_tenant_code");
		sql.FROM("hidden_trouble a");
		if (sqlWhere != null && !"".equals(sqlWhere)) {
			sql.WHERE(sqlWhere);
		}
		return sql.toString();
	}
	
	public String selectHiddenTroubleStatusValue(Map<String,Object> map) {
		SQL sql = new SQL();
		sql.SELECT("enum_name, enum_value, enum_value_name, remark");
		sql.FROM("tenant_" + map.get("parent_tenant_code").toString() + ".enum_var");
		sql.WHERE("enum_name = 'HiddenTroubleStatus' and enum_value = '" + map.get("status").toString() + "'");
		return sql.toString();
	}
}